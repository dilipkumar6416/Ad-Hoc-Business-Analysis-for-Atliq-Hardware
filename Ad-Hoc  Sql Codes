-- 1.List the markets where customer "Atliq Exclusive" operates in the APAC region.
SELECT DISTINCT market
FROM dim_customer
WHERE customer = "atliq exclusive"
  AND region ="apac"


-- 2.Calculate the percentage change in unique products from 2020 to 2021, including counts for each year.
WITH unique_2020 AS
  (SELECT count(DISTINCT product_code) AS unique_products_2020
   FROM fact_sales_monthly
   WHERE fiscal_year = 2020),
     unique_2021 AS
  (SELECT count(DISTINCT product_code) AS unique_products_2021
   FROM fact_sales_monthly
   WHERE fiscal_year = 2021)
SELECT unique_products_2020,
       unique_products_2021,
       round(100*(unique_products_2021-unique_products_2020)/unique_products_2020, 2)AS pct_chg
FROM unique_2021
CROSS JOIN unique_2020


-- 3.Get the count of unique products by segment, sorted by product count in descending order.
SELECT p.segment,
       COUNT(DISTINCT s.product_code) AS product_count
FROM fact_sales_monthly s
JOIN dim_product p ON s.product_code = p.product_code
GROUP BY p.segment
ORDER BY product_count DESC;


--4.Identify the segment with the highest increase in unique products from 2020 to 2021, with year-wise counts and difference.
WITH f20 AS
  (SELECT p.segment,
          COUNT(DISTINCT s.product_code) AS f20_count
   FROM fact_sales_monthly s
   JOIN dim_product p ON s.product_code = p.product_code
   WHERE fiscal_year = 2020
   GROUP BY p.segment
   ORDER BY f20_count DESC),
     f21 AS
  (SELECT p.segment,
          COUNT(DISTINCT s.product_code) AS f21_count
   FROM fact_sales_monthly s
   JOIN dim_product p ON s.product_code = p.product_code
   WHERE fiscal_year = 2021
   GROUP BY p.segment
   ORDER BY f21_count DESC)
SELECT f20.segment,
       f20_count AS product_count_20,
       f21_count AS product_count_21,
       f21_count-f20_count AS difference
FROM f21
JOIN f20 ON f21.segment = f20.segment
ORDER BY difference DESC;


--5.Find the products with the highest and lowest manufacturing costs, showing product code, name, and cost.
SELECT p.product_code,
       product,
       manufacturing_cost
FROM fact_manufacturing_cost mc
JOIN dim_product p ON mc.product_code = p.product_code
WHERE manufacturing_cost =
    (SELECT max(manufacturing_cost)
     FROM fact_manufacturing_cost)
  OR manufacturing_cost =
    (SELECT min(manufacturing_cost)
     FROM fact_manufacturing_cost)
ORDER BY manufacturing_cost DESC;


--6.Generate a report of the top 5 customers with the highest average pre-invoice discount percentage in 2021 in the Indian market.
SELECT c.customer_code,
       customer,
       round(avg(100*pre_invoice_discount_pct), 2) AS average_discount_percentage
FROM fact_pre_invoice_deductions pre
JOIN dim_customer c ON pre.customer_code = c.customer_code
WHERE market = "india"
  AND fiscal_year = 2021
GROUP BY customer_code
ORDER BY average_discount_percentage DESC
LIMIT 5;


--7.Get a monthly report of Gross Sales Amount for customer “Atliq Exclusive” to analyze high and low-performing months.
SELECT month(date) AS MONTH,
       s.fiscal_year AS YEAR,
       round(sum(sold_quantity*gross_price), 0) AS total_gross_price
FROM fact_sales_monthly s
JOIN fact_gross_price g ON s.product_code = g.product_code
AND s.fiscal_year = g.fiscal_year
JOIN dim_customer c ON s.customer_code = c.customer_code
WHERE customer = "atliq exclusive"
GROUP BY MONTH,
         YEAR
ORDER BY YEAR;


--8.Identify the quarter of 2020 with the highest total sold quantity, sorted by quantity.
SELECT CASE
           WHEN month(date) IN (9,10,11) THEN "Q1"
           WHEN month(date) IN(12,1,2) THEN "Q2"
           WHEN month(date) IN(3,4,5) THEN "Q3"
           WHEN month(date) IN (6,7,8) THEN "Q4"
       END AS QUARTER,
       sum(sold_quantity) AS sold_quantity
FROM fact_sales_monthly
WHERE fiscal_year = 2020
GROUP BY QUARTER
ORDER BY sold_quantity DESC;


--9.Find the channel that contributed the most to gross sales in 2021 and its percentage share.
SELECT c.channel,
       round(sum(sold_quantity*gross_price)/1000000, 2) AS gross_Price_mln,
       round(sum(sold_quantity*gross_price)*100/sum(sum(sold_quantity*gross_price)) over(), 2) AS percentage
FROM dim_customer c
JOIN fact_sales_monthly s ON c.customer_code = s.customer_code
JOIN fact_gross_price g ON s.product_code = g.product_code
AND s.fiscal_year = g.fiscal_year
WHERE s.fiscal_year = 2021
GROUP BY c.channel
ORDER BY percentage DESC;


--10.Get the top 3 products in each division with the highest total sold quantity in 2021, including rank order.
WITH ranking AS
  (SELECT division,
          p.product_code,
          product,
          sum(sold_quantity)AS total_qty,
          dense_rank() over(PARTITION BY division
                            ORDER BY sum(sold_quantity) DESC) AS rank_order
   FROM dim_product p
   JOIN fact_sales_monthly s ON p.product_code = s.product_code
   WHERE fiscal_year = 2021
   GROUP BY division,
            product_code)
SELECT *
FROM ranking
WHERE rank_order<=3;
